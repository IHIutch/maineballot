---
import { getCollection, getEntry } from 'astro:content'
import { getEntryUrl } from '#utils/get-url'
import GlobalLayout from '#layouts/global-layout.astro'
import Container from '#components/container.astro'

const allEelections = await getCollection('elections')

const stateElections = (
  await Promise.all(
    allEelections.map(async (elect) => ({
      slug: elect.id,
      data: elect.data,
      posts: (
        await getCollection(
          'posts',
          ({ data }) => data.election.id === elect.id,
        )
      ).sort(
        (a, b) =>
          new Date(b.data.electionDate).getTime() -
            new Date(a.data.electionDate).getTime() ||
          a.slug.localeCompare(b.slug),
      ),
    })),
  )
)
  .filter((elect) => elect.posts.length > 0)
  .sort(
    (a, b) =>
      new Date(b.data.electionDate).getTime() -
      new Date(a.data.electionDate).getTime(),
  )

const localElections = (
  await Promise.all(
    (await getCollection('local')).map(async (local) => ({
      ...local,
      election: await getEntry(local.data.election),
    })),
  )
).sort(
  (a, b) =>
    new Date(b.election.data.electionDate).getTime() -
    new Date(a.election.data.electionDate).getTime(),
)

const candidates = (
  await Promise.all(
    (await getCollection('candidates')).map(async (local) => ({
      ...local,
      election: await getEntry(local.data.election),
    })),
  )
).sort(
  (a, b) =>
    new Date(b.election.data.electionDate).getTime() -
    new Date(a.election.data.electionDate).getTime(),
)
---

<GlobalLayout>
  <Container class="prose prose-neutral mt-12">
    <h1 class="text-3xl font-bold">Elections</h1>
    <h2 class="text-2xl font-bold">State Elections</h2>
    <div>
      {
        stateElections.map((tag) => (
          <div>
            <h3>{tag.data.title}</h3>
            <ul class="list-disc space-y-8">
              {tag.posts.map((post) => (
                <li>
                  <a href={getEntryUrl(post)}>{post.data.title}</a>
                  <p>{post.data.excerpt}</p>
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>

    <h2>Local Elections</h2>
    <ul>
      {
        localElections.map((elect) => (
          <li>
            <a href={getEntryUrl(elect)}>{elect.election.data.title}</a>
          </li>
        ))
      }
    </ul>

    <h2>Candidate</h2>
    <ul>
      {
        candidates.map((cand) => (
          <li>
            <a href={getEntryUrl(cand)}>{cand.election.data.title}</a>
          </li>
        ))
      }
    </ul>
  </Container>
</GlobalLayout>
